 Resolving package versions...
 Installed PDMats ───────── v0.9.10
 Installed Arpack ───────── v0.3.1
 Installed BinaryProvider ─ v0.5.8
  Updating `~/.julia/environments/v1.3/Project.toml`
  [90014a1f] + PDMats v0.9.10
  Updating `~/.julia/environments/v1.3/Manifest.toml`
  [7d9fca2a] + Arpack v0.3.1
  [b99e7846] + BinaryProvider v0.5.8
  [90014a1f] + PDMats v0.9.10
  [2a0f44e3] + Base64 
  [8ba89e20] + Distributed 
  [b77e0a4c] + InteractiveUtils 
  [8f399da3] + Libdl 
  [37e2e46d] + LinearAlgebra 
  [56ddb016] + Logging 
  [d6f4376e] + Markdown 
  [9a3f8284] + Random 
  [ea8e919c] + SHA 
  [9e88b42a] + Serialization 
  [6462fe0b] + Sockets 
  [2f01184e] + SparseArrays 
  [4607b0f0] + SuiteSparse 
  [8dfed614] + Test 
  Building Arpack → `~/.julia/packages/Arpack/cu5By/deps/build.log`
   Testing PDMats
    Status `/tmp/jl_Ta1ivK/Manifest.toml`
  [7d9fca2a] Arpack v0.3.1
  [b99e7846] BinaryProvider v0.5.8
  [90014a1f] PDMats v0.9.10
  [2a0f44e3] Base64  [`@stdlib/Base64`]
  [8ba89e20] Distributed  [`@stdlib/Distributed`]
  [b77e0a4c] InteractiveUtils  [`@stdlib/InteractiveUtils`]
  [8f399da3] Libdl  [`@stdlib/Libdl`]
  [37e2e46d] LinearAlgebra  [`@stdlib/LinearAlgebra`]
  [56ddb016] Logging  [`@stdlib/Logging`]
  [d6f4376e] Markdown  [`@stdlib/Markdown`]
  [9a3f8284] Random  [`@stdlib/Random`]
  [ea8e919c] SHA  [`@stdlib/SHA`]
  [9e88b42a] Serialization  [`@stdlib/Serialization`]
  [6462fe0b] Sockets  [`@stdlib/Sockets`]
  [2f01184e] SparseArrays  [`@stdlib/SparseArrays`]
  [4607b0f0] SuiteSparse  [`@stdlib/SuiteSparse`]
  [8dfed614] Test  [`@stdlib/Test`]
Running tests ...
* pdmtypes 
Testing PDMat{Float64,Array{Float64,2}} with dim = 3
Testing PDiagMat{Float64,Array{Float64,1}} with dim = 3
Testing ScalMat{Float64} with dim = 3
Testing PDSparseMat{Float64,SparseMatrixCSC{Float64,Int64}} with dim = 3
Testing PDMat{Float32,Array{Float32,2}} with dim = 3
Testing PDiagMat{Float32,Array{Float32,1}} with dim = 3
Testing ScalMat{Float32} with dim = 3
Testing PDSparseMat{Float32,SparseMatrixCSC{Float32,Int64}} with dim = 3
* addition 
Testing addition with eltype = Float64
Testing addition with eltype = Float32
* generics 
Testing scalar multiplication
* kron 
   Testing PDMats tests passed 
